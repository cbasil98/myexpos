//memory manager module
if(R1==1)then
    [SYSTEM_STATUS_TABLE + 3]=[SYSTEM_STATUS_TABLE + 3]+1;
    while([SYSTEM_STATUS_TABLE+2]==0)do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_MEM;
        call MOD_5;
    endwhile;
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
    R3=0;
    while([MEMORY_FREE_LIST + R3]<128)do
        if([MEMORY_FREE_LIST+R3]==0)then
            [MEMORY_FREE_LIST+R3]=1;
            R0=R3;
            break;
        endif;
        R3=R3+1;
    endwhile;
    return;
endif;
if(R1==2)then
    [MEMORY_FREE_LIST+R2]=[MEMORY_FREE_LIST+R2]-1;
    if([MEMORY_FREE_LIST+R2]==0)then
       [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;
    endif;
    R3=0;
    while(R3<16)do  
        if([PROCESS_TABLE + 16*R3 + 4]==WAIT_MEM)then
            [PROCESS_TABLE + 16*R3 + 4]=READY;
        endif;
        R3=R3+1;
    endwhile;
    return;
endif;
if(R1==4)then
    [DISK_FREE_LIST+R2]=[DISK_FREE_LIST+R2]-1;
    return;
endif;



if(R1==5)then  
    R5=DISK_MAP_TABLE; 
    while(R5<DISK_MAP_TABLE+ 10*16)do
        if([DISK_MAP_TABLE + R5]==R2)then
            R6=[PAGE_TABLE_BASE + ((R5-DISK_MAP_TABLE)/10+(R5-DISK_MAP_TABLE)%10)*2];
            if(R6!=-1)then
                R0=R6;
                print "here3";
                [MEMORY_FREE_LIST + R6]=[MEMORY_FREE_LIST + R6]+1;
                return;
            endif;
        endif;
        multipush(R1,R2,R3,R4,R5);
        R1=1;
        

        call MOD_2;
        multipop(R1,R2,R3,R4,R5);
        multipush(R0,R1,R2,R3,R4,R5);
        R1=2;
        R3=R0;
        R4=R2;
        R2=[SYSTEM_STATUS_TABLE+1];
        call MOD_4;
        multipop(R0,R1,R2,R3,R4,R5);
        return;
    endwhile;
endif;
    