alias currentPID R0;
multipush(BP);
currentPID = [SYSTEM_STATUS_TABLE+1];
alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + currentPID * 16;

[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;


currentPID=currentPID+1;

alias flag R2;
flag=0;
while(currentPID<16)do
    if([PROCESS_TABLE+ currentPID*16 + 4] == CREATED)then
        breakpoint;
        SP=[PROCESS_TABLE + currentPID*16 + 13];
        [PROCESS_TABLE+ currentPID*16 + 4] = RUNNING;
        [PROCESS_TABLE+ currentPID*16 + 9] = 0;
        [SYSTEM_STATUS_TABLE+1]=currentPID;
        PTBR=[PROCESS_TABLE+currentPID*16+14];
        PTLR=10;
        breakpoint;
        ireturn;           
        endif;
    if([PROCESS_TABLE+ currentPID*16 + 4] == READY)then
        [PROCESS_TABLE+ currentPID*16 + 4] = RUNNING;
        [SYSTEM_STATUS_TABLE+1]=currentPID; 
        PTBR=[PROCESS_TABLE+currentPID*16+14];
        PTLR=10;
        SP=[PROCESS_TABLE+currentPID*16+11]*512+[PROCESS_TABLE+currentPID*16+12];
        flag=1;
        break;
        endif;
    currentPID=currentPID+1;
    endwhile;
if (flag==0)then
    [PROCESS_TABLE+ 4] = RUNNING;
    [SYSTEM_STATUS_TABLE+1]=0; 
    PTBR=[PROCESS_TABLE+14];
    PTLR=10;
    SP=[PROCESS_TABLE+11]*512+[PROCESS_TABLE+12];
    endif;
multipop(BP);
return;