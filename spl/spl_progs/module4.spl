//Device manager module
alias functionName R1;
alias PID R2;

if(functionName==2)then  //disk load
    
    multipush(R1,R2,R3,R4);
    functionName=3;
    call MOD_0;
    multipop(R1,R2,R3,R4);
    [DISK_STATUS_TABLE + 1]=0;
    [DISK_STATUS_TABLE+2]=R3;
    [DISK_STATUS_TABLE+3]=R4;
    
    
    load(R3,R4);

    [PROCESS_TABLE + PID * 16 + 4]=WAIT_DISK;
    multipush(R1,R2,R3,R4);
    call SCHEDULER;
    multipop(R1,R2,R3,R4);
    
endif;


if(functionName==3)then
    multipush(R1,R2,R3);
    functionName=8;
    PID=[SYSTEM_STATUS_TABLE + 1];
    call MOD_0;
    multipop(R1,R2,R3);   
    multipush(R1,R2,R3);
    functionName=9;
    PID=[SYSTEM_STATUS_TABLE+1];
    multipop(R1,R2,R3);
else if(functionName==4)then
    multipush(R1,R2,R3);
    functionName=8;
    PID=[SYSTEM_STATUS_TABLE + 1];
    call MOD_0;
    multipop(R1,R2,R3);
    read;  
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4]=WAIT_TERMINAL;
    multipush(R1,R2,R3);
    call SCHEDULER;
    multipop(R1,R2,R3);
    [[PTBR+2*(R3/512)]*512+R3%512]=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 8];
endif;
endif;
return;