loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2, 15);
loadi(3, 16);
loadi(63,13);
loadi(64,14);
loadi(4, 17);
loadi(5, 18);
loadi(16,29);
loadi(17,30);

//exec progran
loadi(100,69);
loadi(106,71);
//module 5
loadi(50,63);
loadi(51,64);
//module 0
loadi(40,53);
loadi(41,54);
//module 4
loadi(48,61);
loadi(49,62);
[TERMINAL_STATUS_TABLE+0]=0;

//Init progran PID=1
breakpoint;
PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 4] = CREATED; 
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 12] = 0;
[PROCESS_TABLE + 16 + 14] = PTBR;
[PROCESS_TABLE + 16 + 15] = 10;
[76*512] = [65 * 512 + 1];

//exec progran PID=2
PTBR = PAGE_TABLE_BASE+40;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 101;
[PTBR+5] = "0110";
[PTBR+6] = 102;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 100;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 103;
[PTBR+17] = "0110";
[PTBR+18] = 104;
[PTBR+19] = "0110";

[PROCESS_TABLE + 16*2 + 11] = 105;
[PROCESS_TABLE + 16*2 + 1] = 2;
[PROCESS_TABLE + 16*2 + 4] = CREATED; 
[PROCESS_TABLE + 16*2 + 13] = 8*512;
[PROCESS_TABLE + 16*2 + 12] = 0;
[PROCESS_TABLE + 16*2 + 14] = PTBR;
[PROCESS_TABLE + 16*2 + 15] = 10;
[103*512] = [100 * 512 + 1];


//exec progran PID=3
PTBR = PAGE_TABLE_BASE+60;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 107;
[PTBR+5] = "0110";
[PTBR+6] = 108;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 106;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 109;
[PTBR+17] = "0110";
[PTBR+18] = 110;
[PTBR+19] = "0110";

[PROCESS_TABLE + 16*3 + 11] = 111;
[PROCESS_TABLE + 16*3 + 1] = 3;
[PROCESS_TABLE + 16*3 + 4] = CREATED; 
[PROCESS_TABLE + 16*3 + 13] = 8*512;
[PROCESS_TABLE + 16*3 + 12] = 0;
[PROCESS_TABLE + 16*3 + 14] = PTBR;
[PROCESS_TABLE + 16*3 + 15] = 10;
[109*512] = [100 * 512 + 1];


alias a R0;
a=4;
while(a<16)do
    [PROCESS_TABLE + 16*a + 4] = TERMINATED; 
    a=a+1;
endwhile;
return;